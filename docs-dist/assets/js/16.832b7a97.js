(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{224:function(t,e,a){"use strict";a.r(e);var r=a(3),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"creating-a-new-project"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-new-project"}},[t._v("#")]),t._v(" Creating a new project:")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("GitHub -> repositories -> new repo")])]),t._v(" "),a("li",[a("p",[t._v("clone or download -> clone with HTTPS -> copy address")])]),t._v(" "),a("li",[a("p",[t._v("vsCode -> new window (Cmd-Shift-N)")])]),t._v(" "),a("li",[a("p",[t._v("onglet Explorer -> Clone Repository")])]),t._v(" "),a("li",[a("p",[t._v("paste the link, select local repo folder, open cloned repo")])])]),t._v(" "),a("h2",{attrs:{id:"pushing-existing-project-to-github"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pushing-existing-project-to-github"}},[t._v("#")]),t._v(" Pushing existing project to GitHub:")]),t._v(" "),a("ol",[a("li",[t._v("Navigate to the local project directory in vsCode and create a local git repository:")])]),t._v(" "),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[t._v(" git init\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("Once that is successful, click on the 'Source Control' icon on the left navbar in VS-Code to see files ready to be commit-ed. Press on 'Commit' button if needed, provide comments, stage the changes and commit the files. Alternatively you can run from CLI")])]),t._v(" "),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[t._v('git commit -m "PM"\n')])])]),a("ol",{attrs:{start:"3"}},[a("li",[a("p",[t._v("Now you need to visit your GitHub account and create a new Repository. Exclude creating 'README.md', '.gitIgnore' files, or adding any License to the repo. Sometimes these settings cause issue while pushing in.")])]),t._v(" "),a("li",[a("p",[t._v("Copy the link to this newly created GitHub Repository. For ex. "),a("code",[t._v("https://github.com/rvsesam/vueP_Blog.git")])])]),t._v(" "),a("li",[a("p",[t._v("Come back to the terminal in VS-CODE and type these commands in succession:")])])]),t._v(" "),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[t._v("git remote add origin "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Link")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("to")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("GitHub")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("Repo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("     //maps the remote repo link to local git repo\n\ngit remote -v                                  //this is to verify the link to the remote repo \n\ngit push -u origin master                      // pushes the commit-ed changes into the remote repo\n")])])]),a("ol",{attrs:{start:"6"}},[a("li",[t._v("You can see the success message in the Terminal. You can also verify by refreshing the GitHub repo online.")])]),t._v(" "),a("h2",{attrs:{id:"supprimer-un-repo-sur-github"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#supprimer-un-repo-sur-github"}},[t._v("#")]),t._v(" Supprimer un repo sur GitHub:")]),t._v(" "),a("p",[t._v("Dans le repo -> onglet Settings, défiler vers le bas -> Danger Zone -> Delete this repo")]),t._v(" "),a("h2",{attrs:{id:"download-repo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#download-repo"}},[t._v("#")]),t._v(" Download repo")]),t._v(" "),a("h3",{attrs:{id:"download-a-repository-on-github-com-to-our-machine"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#download-a-repository-on-github-com-to-our-machine"}},[t._v("#")]),t._v(" download a repository on GitHub.com to our machine")]),t._v(" "),a("p",[t._v("git clone https://github.com/me/repo.git")]),t._v(" "),a("h3",{attrs:{id:"change-into-the-repo-directory"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#change-into-the-repo-directory"}},[t._v("#")]),t._v(" change into the "),a("code",[t._v("repo")]),t._v(" directory")]),t._v(" "),a("p",[t._v("cd repo")]),t._v(" "),a("h3",{attrs:{id:"create-a-new-branch-and-switch-to-that-branch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-a-new-branch-and-switch-to-that-branch"}},[t._v("#")]),t._v(" create a new branch and switch to that branch")]),t._v(" "),a("p",[t._v("git branch -b my-branch")]),t._v(" "),a("p",[t._v("-b <new_branch>\nCreate a new branch named <new_branch> and start it at <start_point>; équivalent à "),a("code",[t._v("git branch my-branch + git checkout my-branch")])]),t._v(" "),a("h3",{attrs:{id:"make-changes-on-file1-md-and-file2-md-and-stage-the-changed-files"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#make-changes-on-file1-md-and-file2-md-and-stage-the-changed-files"}},[t._v("#")]),t._v(" make changes on "),a("code",[t._v("file1.md")]),t._v(" and "),a("code",[t._v("file2.md")]),t._v(" and stage the changed files")]),t._v(" "),a("p",[t._v("git add file1.md file2.md")]),t._v(" "),a("h3",{attrs:{id:"take-a-snapshot-of-the-staging-area-anything-that-s-been-added"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#take-a-snapshot-of-the-staging-area-anything-that-s-been-added"}},[t._v("#")]),t._v(" take a snapshot of the staging area (anything that's been added)")]),t._v(" "),a("p",[t._v('git commit -m "my snapshot"')]),t._v(" "),a("h3",{attrs:{id:"push-changes-to-github"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#push-changes-to-github"}},[t._v("#")]),t._v(" push changes to github")]),t._v(" "),a("p",[t._v("git push --set-upstream origin my-branch")]),t._v(" "),a("h3",{attrs:{id:"create-a-new-directory-and-initialize-it-with-git-specific-functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-a-new-directory-and-initialize-it-with-git-specific-functions"}},[t._v("#")]),t._v(" create a new directory, and initialize it with git-specific functions")]),t._v(" "),a("p",[t._v("git init my-repo")]),t._v(" "),a("h3",{attrs:{id:"change-into-the-my-repo-directory"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#change-into-the-my-repo-directory"}},[t._v("#")]),t._v(" change into the "),a("code",[t._v("my-repo")]),t._v(" directory")]),t._v(" "),a("p",[t._v("cd my-repo")]),t._v(" "),a("h3",{attrs:{id:"create-the-first-file-in-the-project"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-the-first-file-in-the-project"}},[t._v("#")]),t._v(" create the first file in the project")]),t._v(" "),a("p",[t._v("touch README.md")]),t._v(" "),a("h3",{attrs:{id:"git-isn-t-aware-of-the-file-stage-it"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-isn-t-aware-of-the-file-stage-it"}},[t._v("#")]),t._v(" git isn't aware of the file, stage it")]),t._v(" "),a("p",[t._v("git add README.md")]),t._v(" "),a("h3",{attrs:{id:"take-a-snapshot-of-the-staging-area"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#take-a-snapshot-of-the-staging-area"}},[t._v("#")]),t._v(" take a snapshot of the staging area")]),t._v(" "),a("p",[t._v('git commit -m "add README to initial commit"')]),t._v(" "),a("h3",{attrs:{id:"provide-the-path-for-the-repository-you-created-on-github"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#provide-the-path-for-the-repository-you-created-on-github"}},[t._v("#")]),t._v(" provide the path for the repository you created on github")]),t._v(" "),a("p",[t._v("git remote add origin https://github.com/YOUR-USERNAME/YOUR-REPOSITORY.git")]),t._v(" "),a("h3",{attrs:{id:"push-changes-to-github-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#push-changes-to-github-2"}},[t._v("#")]),t._v(" push changes to github")]),t._v(" "),a("p",[t._v("git push --set-upstream origin master")]),t._v(" "),a("h2",{attrs:{id:"example-contribute-to-an-existing-branch-on-github"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-contribute-to-an-existing-branch-on-github"}},[t._v("#")]),t._v(" Example: contribute to an existing branch on GitHub")]),t._v(" "),a("p",[t._v("assumption: a project called "),a("code",[t._v("repo")]),t._v(" already exists on the machine, and a new branch has been pushed to GitHub.com since the last time changes were made locally")]),t._v(" "),a("h3",{attrs:{id:"change-into-the-repo-directory-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#change-into-the-repo-directory-2"}},[t._v("#")]),t._v(" change into the "),a("code",[t._v("repo")]),t._v(" directory")]),t._v(" "),a("p",[t._v("cd repo")]),t._v(" "),a("h3",{attrs:{id:"update-all-remote-tracking-branches-and-the-currently-checked-out-branch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#update-all-remote-tracking-branches-and-the-currently-checked-out-branch"}},[t._v("#")]),t._v(" update all remote tracking branches, and the currently checked out branch")]),t._v(" "),a("p",[t._v("git pull")]),t._v(" "),a("h3",{attrs:{id:"update-all-remote-tracking-branches-and-the-currently-checked-out-branch-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#update-all-remote-tracking-branches-and-the-currently-checked-out-branch-2"}},[t._v("#")]),t._v(" update all remote tracking branches, and the currently checked out branch")]),t._v(" "),a("p",[t._v("git pull")]),t._v(" "),a("h3",{attrs:{id:"change-into-the-existing-branch-called-feature-a"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#change-into-the-existing-branch-called-feature-a"}},[t._v("#")]),t._v(" change into the existing branch called "),a("code",[t._v("feature-a")])]),t._v(" "),a("p",[t._v("git checkout my-branch")]),t._v(" "),a("h3",{attrs:{id:"git-stash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-stash"}},[t._v("#")]),t._v(" git stash")]),t._v(" "),a("p",[t._v("Use git stash when you want to record the current state of the working directory and the index, but want to go back to a clean working directory. The command saves your local modifications away and reverts the working directory to match the HEAD commit.")]),t._v(" "),a("h2",{attrs:{id:"suppression-de-branche"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#suppression-de-branche"}},[t._v("#")]),t._v(" Suppression de branche")]),t._v(" "),a("p",[t._v("Faire commit et push depuis my-branch,")]),t._v(" "),a("p",[a("code",[t._v("git checkout master")]),t._v(" -> Switched to branch 'master'")]),t._v(" "),a("p",[a("code",[t._v("git merge my-branch")]),t._v(" -> Merge made by the 'recursive' strategy.")]),t._v(" "),a("p",[t._v("synchroniser les changements: clic sur git dans status bar.")]),t._v(" "),a("p",[a("code",[t._v("git branch -d my-branch")]),t._v(" -> suppression de my-branch -d = --delete")]),t._v(" "),a("p",[a("code",[t._v("git branch -dr origin/Modif-liste-Notes-Court/Long")]),t._v("  -> Deleted remote-tracking branch origin/Modif-liste-Notes-Court/Long (was 8e65c76).")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("Start a new feature\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b new-feature master\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Edit some files")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Start a feature"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Edit some files")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Finish a feature"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Develop the master branch")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Edit some files")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Make some super-stable changes to master"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Merge in the new-feature branch")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge new-feature\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -d new-feature\n```")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);